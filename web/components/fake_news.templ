package components

import (
	"fmt"
	"github.com/bjarke-xyz/rasende2-api/rss"
	"time"
)

const placeholderImg = "https://static.bjarke.xyz/placeholder.png"

func getValOrDefault(val *string, defaultVal string) string {
	if val == nil {
		return defaultVal
	}
	return *val
}

type ArticleFuncsModel struct {
	TimeDifference func(t time.Time) string
	TruncateText   func(str string, maxLength int) string
}

type FakeNewsViewModel struct {
	Base     BaseViewModel
	FakeNews []rss.FakeNewsDto
	Cursor   string
	Funcs    ArticleFuncsModel
}

templ fakeNews(model FakeNewsViewModel) {
	<div class="m-4">
		<div>
			<h2 class="text-xl font-bold">Fremhævede falske artikler</h2>
			<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 p-4">
				for _, fn := range model.FakeNews {
					@articleCard(fn, model.Funcs)
				}
			</div>
			<button
				class="bg-blue-100 enabled:hover:bg-blue-200 mt-5 p-2 rounded-md text-slate-900"
				disabled
			>
				Vis mere
			</button>
		</div>
	</div>
}

templ FakeNews(model FakeNewsViewModel) {
	@Layout(model.Base, fakeNews(model))
}

func getArticleUrl(fn rss.FakeNewsDto) string {
	return fmt.Sprintf("/fake-news/%v-%v-%v", fn.SiteId, fn.Published.Format(time.DateOnly), fn.Title)
}

templ articleCard(fn rss.FakeNewsDto, funcs ArticleFuncsModel) {
	<div class="min-w-[8rem] shadow-md rounded-lg dark:bg-slate-700">
		<img
			class="w-full h-48 object-cover"
			src={ getValOrDefault(fn.ImageUrl, placeholderImg) }
			alt={ fn.Title }
		/>
		<div class="p-4">
			<div class="flex items-center justify-between mb-2">
				<span class="bg-blue-100 text-blue-800 dark:bg-blue-200 dark:text-blue-800 text-xs font-semibold px-2.5 py-0.5 rounded">
					{ fn.SiteName }
				</span>
				<span class="text-gray-500 dark:text-gray-200 text-xs" title={ fn.Published.Format(time.RFC3339) }>
					{ funcs.TimeDifference(fn.Published) }
				</span>
			</div>
			<h2 class="text-lg font-semibold text-gray-800 dark:text-gray-50 hover:underline">
				<a href={ templ.SafeURL(getArticleUrl(fn)) } target="_blank" rel="noopener noreferrer">
					{ fn.Title }
				</a>
			</h2>
			<p class="text-gray-600 dark:text-gray-200 mt-2">{ funcs.TruncateText(fn.Content, 100) }</p>
			<a
				href={ templ.SafeURL(getArticleUrl(fn)) }
				target="_blank"
				rel="noopener noreferrer"
				class="text-blue-500 dark:text-blue-200 dark:hover:text-blue-300 hover:text-blue-700 mt-4 inline-block"
			>
				Læs mere
			</a>
		</div>
	</div>
}
